version: '3.9'

services:
  proxy:
    image: ngrok/ngrok:alpine
    env_file:
      - ../.env/.dev.env
    command: ["http", "headman_bot:8080", "--domain", "$NGROK_DOMAIN"]
    ports: 
      - 80:80
      - 4040:4040

  headman_bot:
    env_file:
      - ../.env/.env
    build: 
      dockerfile: ./docker/Dockerfile
      context: ../
    volumes:
      - /var/log/headman_bot:/app/logs
      - ../update_info.html:/app/update_info.html
    depends_on:
      redis:
        condition: service_started
      postgres:
          condition: service_healthy

  postgres:
    image: postgres:16.1-alpine3.19
    restart: always
    env_file:
      - ../.env/.database.env
    volumes:
      - /var/lib/headman_bot_db:/var/lib/postgresql/data
      - ../postgres/postgresql.conf:/etc/postgresql/postgresql.conf
      - ../postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.2.3
    restart: on-failure
